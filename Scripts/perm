#!/usr/bin/env zsh

# Description: Changes permissions on files and directories recursively.
# Permissions used are 755/700 for directories and 644/600 for files, prior
# execute flags on files are left untouched.
#
# Usage: perm -s <path1> <path2> ...
#        perm -l <path1> <path2> ...
#
# Creator: GÃ¶ran Gustafsson (gustafsson.g at gmail.com)
# License: BSD 3-Clause

if [[ $# -ge 2 && $1 == (-l|--loose) ]]; then
  perm_dir=755
  perm_file=644
  perm_exec=$perm_dir
elif [[ $# -ge 2 && $1 == (-s|--strict) ]]; then
  perm_dir=700
  perm_file=600
  perm_exec=$perm_dir
else
  echo "Usage: ${0:t} [OPTION]... [PATH(S)]...

  -l, --loose   Use permissions 755 on dirs and 644 on files.
  -s, --strict  Use permissions 700 on dirs and 600 on files."
  exit
fi

shift # Remove flag for argument list.

for arg; do
  if [[ ! -a $arg ]]; then
    echo "Item '${arg}' does not exist! Skipping..."
    continue
  fi

  echo "Changing permissions on '${arg}'."

  find $arg -type d -exec chmod $perm_dir "{}" \;

  if [[ $OSTYPE == darwin* ]]; then
    find $arg -type f -perm +111 -exec chmod $perm_exec "{}" \;
    find $arg -type f ! -perm +111 -exec chmod $perm_file "{}" \;
  else
    find $arg -type f -perm /111 -exec chmod $perm_exec "{}" \;
    find $arg -type f ! -perm /111 -exec chmod $perm_file "{}" \;
  fi
done
