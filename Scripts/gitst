#!/usr/bin/env zsh

# Description: Checks status of all Git repos under default projects path, or
# path specified through argument. State of repo is indicated through color.
# Checks if a todo file exist at root level of repository.
#
# Example:
#
#   Projects:
#   Ansiblebot      master
#   Dotfiles        master + todo
#   Project-Assets  master
#   ...
#
# Usage: gitst
#        gitst <path>
#
# Author: GÃ¶ran Gustafsson (gustafsson.g at gmail.com)
# License: BSD 3-Clause

if [[ $# -eq 0 ]]; then
  projects_path=~/Projects
elif [[ $# -eq 1 ]]; then
  projects_path=$1
else
  echo "Usage: ${0:t} [PATH]..."
  exit
fi

if [[ ! -d $projects_path ]]; then
  echo "Directory '${projects_path}' not found! Exiting..."
  exit 1
fi

output=""

for directory in ${projects_path}/*(N); do
  if ! git -C $directory rev-parse --is-inside-work-tree &> /dev/null; then
    continue
  fi

  pushd $directory
  output="${output}${directory:t}:"
  branch=$(git branch --show-current 2> /dev/null)
  if [[ -n $(git status --porcelain 2> /dev/null) ]]; then
    output="${output}%B%F{red}${branch}%f%b"
  else
    output="${output}%B%F{green}${branch}%f%b"
  fi
  files=(.todo(N) .todo.*(N) TODO(N) TODO.*(N))
  if [[ -n $files ]]; then
    output="${output} + todo"
  fi
  output="${output}\n"
  popd
done

if [[ -n $output ]]; then
  print -P "%B%F{cyan}${projects_path:t}:%f%b"
  print -P $output | column -s ":" -t
else
  echo "No Git repos found under '${projects_path/${HOME}/~}'."
fi
