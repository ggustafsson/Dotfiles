#!/usr/bin/env ruby

# Description: Rewrites input text following title capitalization rules.
# Brackets () {} [] <>, quotes "" '', first word, and last word is handled
# correctly etc. Corner case proofness is good but should not be expected.
#
# Usage: title <text>
#
# Author: GÃ¶ran Gustafsson (gustafsson.g at gmail.com)
# License: BSD 3-Clause

if ARGV.empty?
  puts "Usage: #{File.basename($0)} [TEXT]..."
  exit
end

lowercase_words = %w(
  a
  an
  and
  as
  at
  but
  by
  en
  etc
  for
  from
  if
  in
  of
  on
  or
  the
  to
  via
  von
  vs
  with
)

ignore_chars = %w(\( { [ < " ')

# Turn multiple arguments into one single string.
text = $*.join(" ").split(" ")
last_word = text.length - 1

text.each_with_index do |word, position|
  # Always capitalize first and last word.
  if (position == 0 or position == last_word) and word[0] =~ /[[:alpha:]]/
    text[position] = word.capitalize
    next
  end

  # Ignore leading brackets/quotes and capitalize remaining text.
  if ignore_chars.include?(word[0])
    first_char = word[0]
    remaining = word[1..-1]
    text[position] = first_char + remaining.capitalize
    next
  end

  # Lowercase or capitalize word not matched by previous rules.
  if lowercase_words.include?(word.downcase)
    text[position] = word.downcase
  else
    text[position] = word.capitalize
  end
end

puts text.join(" ")
