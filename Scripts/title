#!/usr/bin/env ruby

# Description: This script takes text as input and prints out text that is
# capitalized as a headline. Should be correct most of the time.
#
# Usage: title <text>
#
# Creator: GÃ¶ran Gustafsson (gustafsson.g at gmail.com)
# License: BSD 3-Clause

if ARGV.empty?
  puts "Usage: #{File.basename($0)} [TEXT]..."
  exit
end

# All the words that should be downcased.
word_list = %w(
  a
  an
  and
  as
  at
  but
  by
  en
  etc
  for
  from
  if
  in
  of
  on
  or
  the
  to
  via
  von
  vs
  with
)

# Using .join and .split to turn the argument(s) into one single string.
text = $*.join(" ").split(" ")
last_position = text.length - 1

text.each_with_index do |word, position|
  # Capitalize the first and last word if it starts with a normal letter.
  if (position == 0 or position == last_position) and word[0] =~ /[[:alpha:]]/
    text[position] = word.capitalize
    next
  end

  # If the current word starts with "(" or "[" then ignore the first character
  # and capitalize the remaining text. Useful for capitalizing FLAC/MP3 tags.
  # Everything behind "(" or "[" will be seen as a new sentence.
  if word[0] == "(" or word[0] == "["
    first_char = word[0]
    remaining = word[1..-1]
    text[position] = first_char + remaining.capitalize
    next
  end

  # Check if the current word (in lower cased form) is included in the
  # word_list array.
  if word_list.include?(word.downcase)
    text[position] = word.downcase
  else
    text[position] = word.capitalize
  end
end

puts text.join(" ")
